Klasická hra Bomberman

========================================================================================================================

Tato semestrální práce patří do kategorie her. Vaším cílem je vytvořit konkrétní hru, která bude modifikovatelná
prostřednictvím konfiguračních souborů. Nesnažte se všechny hodnoty definovat přímo v kódu (a to ani pomocí konstant).
Umístěte je do konfiguračních souborů (jednoho nebo více), které váš program bude načítat.

Implementujte jednoduchou hru po vzoru hry Bomberman. Ve hře Bomberman hráč může umisťovat bomby, které po výbuchu ničí
okolní zdi a případně eliminují postavy.

Hra musí umožňovat alespoň tyto dva režimy:

    hru dvou hráčů na jednom počítači,

    hru proti počítači.

Implementujte následující funkcionality:

    Implementujte jednoduchou AI počítačového hráče (náhodné tahy nestačí).

    Některé zdi je možné zničit, po zničení s určitou pravděpodobností zanechají bonus.

    Implementujte alespoň 5 druhů bonusů, například se můžete inspirovat těmito:

        změna počtu dostupných bomb,

        změna velikosti plamene plamene,

        hráč může po určitou dobu chodit přes bomby,

        automatické kladení bomb (postava nemůže ovládat umístění bomby, bomba je umístěna automaticky, jakmile ji má hráč k dispozici),

        manuální odpálení bomby.

    Hra musí být konfigurovatelná ze souboru:

        načítání herních úrovní (př. mapy, …),

        pravděpodobnosti jednotlivých bonusů,

    Hra umožňuje zobrazit tabulku nejlepších hráčů.

Kde lze využít polymorfismus? (doporučené)

    efekty bonusů a nemocí: zvětšení plamenu, zvýšení počtu bomb, inverze ovládání, …

    ovládání hráčů: lokální hráč (nastavení klávesnice), umělá inteligence (různé druhy), síťový hráč, …

    uživatelské rozhraní: konzolové, ncurses, SDL, OpenGL (různé druhy), …

Další informace:

    Není nutné implementovat přesnou kopii hry Bomberman, zamyslete se, jakým způsobem můžete základní požadavky rozšířit a udělat hru zajímavější.

    Poznámka 29.4.2023: Není nutné implementovat hru real-time, hra může být i tahová.

    https://en.wikipedia.org/wiki/Bomberman
    
========================================================================================================================

Vlastní specifikace zadání:

Hra Bomberman se bude řídit standartními pravidly původní hry.

Hráč bude pokládat bomby, které budou schopné rozbít bedny, ze kterých při rozbití může vypadnout
nějaký bonus, zároveň bomby budou schopné zabít monstra, jiné hráče, ale i
hráče, který sám bombu položil. 

Bude možné hrát jak singleplayer 'kampaň' proti AI kontrolovaným nepřátelům (monstra), tak
multiplayer proti dalšímu hráči na jedné klávesnici.

Singleplayer i multiplayer herní módy budou typu king of the hill tzn. poslední přeživší vyhrává.

Jednotlivé levely kampaně budou uloženy v souborech a z nich bude čteno rozložení objektů na mapě 
při její generaci. Při spuštění hry pro si bude možné vybrat mapu na které se bude hrát (singleplayer i multiplayer mód).

Hráč se bude moci pohybovat pouze kolmo na osy X a Y. Ovládání pohybu a pokládaní bomb obou hráčů
bude předem nastaveno.

Dále se v souboru bude ukládat nejlepš dosažené skóre na každé mapě v rámci singleplazer módu, které získává hráč za
zabíjení monster a sbírání bonusů. Při dosažení nejlepšího skóre bude hráč vyzván k zadání jména, které se u jeho
skóre zobrazí. Nakonec bude v konfiguračním souboru uloženo nastavení herních objektů (šance na spadnutí bonusu, skóre za
zničení jednotlivých objektů (monster/beden), skóre za sebrání jednotlivých bonusů).

Při spuštění hry si hráč bude moci zvolit jaký typ hry chce hrát (hráč proti monstrům, hráč proti hráči), zobrazit
tabulku skóre nebo ovládání, samotná navigace menu bude provedena pomocí 'šipek' (arrow keys).

-------------------------------------------------------------------------------------------------

Polymorfismus:
    Všechny herní objekt budou dědit ze třídy, která bude držet informaci o své současné pozici,
    jelikož tu o sobě musí vědět každý z nich. Dále bude implementovat základní metody pro
    zobrazování na herní ploše. Z ní přímo budou čerpat třídy zobrazující statické objekty herního
    prostředí.

    Další mateřskou třídou (která však sama bude dědit z již zmíněné hlavní třídy) bude třída,
    která bude zastřešovat objekty, které jsou navíc schopné nějakých akcí (pohyb, pokládání bomb).
    Z této třídy bude dědit třída pro monstra, která bude dělena do dalších podtříd pro různé druhy
    monstrer.
    Další třída bude třída hráče, která bude o sobě navíc ukládat údaje o sebraných bonusech.
    
    Poslední polymorfní třída rovněž dědící z hlavní třídy bude obalovat spceiální objekty.
    Tyto speciální objekty budou například různé bonusy pro hráče, který je sebere.

    Další úroveň polymorfismu je aplikována v třídách reprezentujících menu hry. Mateřská třída
    implementuje vykreslování oken menu a další základní vlastnosti, jako třeba chování při 
    změně velikosti terminálu a načítání uživatelského vstupu, každá podtřída si pak implementuje
    vlastní akce, kterých v daném menu lze dosáhnout v reakci na uživatelův vstup.
    
    Třídní diagram lze nalézt ve složce doc/, která obsahuje veškerou dokumentaci vygenerovanou pomocí 
    utility Doxygen. S tím jste pravděpodobně seznámeni, nicméně pro jistotu uvádím, že na vygenerované
    HTML stránce se nachází v menu "Classes/Class Hiearchy".

-------------------------------------------------------------------------------------------------
   Složka src/ obsahuje hlavičkové a .cpp soubory dosavadní implementace, která není ještě plně funkční, ale obsahuje zamýšlené rozhraní.
